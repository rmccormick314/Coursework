install.packages("maps")
gap.data <- read_csv( 'Gapminder.csv' )
library(tidyverse)
library(maps)
gap.data <- read_csv( 'Gapminder.csv' )
gap.data.2005 <- gap.data %>% filter( year==2005 )
gap.data.2005 <- gap.data.2005 %>%
subset( Country, GDP_per_capita )
gap.data.2005 <- gap.data.2005 %>%
subset( country, GDP_per_capita )
?subset
gap.data.2005 <- gap.data.2005 %>%
subset( select = c( country, GDP_per_capita ) )
?map_data
world <- map_data( "world" )
world
merge( world, gap.data.2005, by="region" )
gap.data.2005$region <- gap.data.2005$country
merge( world, gap.data.2005 )
gap.data.2005 <- gap.data.2005 %>%
subset( select = c( country, GDP_per_capita ) )
world <- map_data( "world" )
world
merge( world, gap.data.2005, by.x=region, by.y=country )
gap.data.merged <- merge( world, gap.data.2005, by.x=country, by.y=region )
gap.data.merged <- merge( world, gap.data.2005, by.x="region", by.y="country" )
gap.data.merged <- merge( world, gap.data.2005, by.x="region", by.y="country" )
gap.data.merged <- arrange( gap.data.merged, group, order )
ggplot( data=gap.data.merged,
aes( long, lat, group=group, fill=GDP_per_capita ) ) +
geom_polygon()
ggplot( data=gap.data.merged,
aes( long, lat, group=group, fill=GDP_per_capita ) ) +
geom_polygon() +
scale_fill_gradient( low="white", high="green" ) +
coord_map( "Mercator" )
ggplot( data=gap.data.merged,
aes( long, lat, group=group, fill=GDP_per_capita ) ) +
geom_polygon() +
scale_fill_gradient( low="white", high="green" ) +
coord_map( "polyconic" )
?coord_map
ggplot( data=gap.data.merged,
aes( long, lat, group=group, fill=GDP_per_capita ) ) +
geom_polygon() +
scale_fill_gradient( low="white", high="green" ) +
coord_map( "mercator" )
ggplot( data=gap.data.merged,
aes( long, lat, group=group, fill=GDP_per_capita ) ) +
geom_polygon() +
scale_fill_gradient( low="white", high="green" ) +
coord_map( "mercator" )
ggplot( data=gap.data.merged,
aes( long, lat, group=group, fill=GDP_per_capita ) ) +
geom_polygon() +
scale_fill_gradient( low="white", high="green" ) +
coord_map( "mercator" ) +
labs( title="GDP per Capita by Country", x="", y="",
fill="GDP per Capita")
ggplot( data=gap.data.merged,
aes( long, lat, group=group, fill=GDP_per_capita ) ) +
geom_polygon() +
scale_fill_gradient( low="white", high="green" ) +
coord_map( "mercator" ) +
labs( title="GDP per Capita by Country", x="Latitude", y="Longitude",
fill="GDP per Capita")
knitr::opts_chunk$set(echo = TRUE)
library( googlesheets4 )
library( ggplot2 )
library( tidyverse )
library( dplyr )
library( ggpubr )
library( forcats )
library( "Hmisc" )
library( colorspace )
dream.data <- read_sheet( "https://docs.google.com/spreadsheets/d/1jABnpDK0y-Dz7N9I0QVNuQQHidHoayrnGJ2t1-Fez-I/edit?resourcekey#gid=1997698973" )
colnames(dream.data)[2] ="Sleep.Time"
colnames(dream.data)[3] ="Sleep.Quality"
colnames(dream.data)[4] ="dreamed"
colnames(dream.data)[5] ="dream.count"
colnames(dream.data)[6] ="dream.quality"
colnames(dream.data)[7] ="dream.vivid"
colnames(dream.data)[8] ="dream.sensation"
colnames(dream.data)[9] ="dream.recall"
colnames(dream.data)[10] ="dream.duration"
colnames(dream.data)[11] ="dream.senses"
colnames(dream.data)[12] ="dream.emotions"
dream.data$dream.emotions <- gsub("Intrigued", "Intrigue", dream.data$dream.emotions)
dream.data$dream.emotions <- as.factor( str_to_title( dream.data$dream.emotions ) )
dream.data$dream.emotions <- gsub("Curious", "Curiosity", dream.data$dream.emotions)
dream.data$dream.emotions <- gsub("Lust", "Love", dream.data$dream.emotions)
dream.data$dream.emotions <- gsub("Eager", "Excitement", dream.data$dream.emotions)
dream.data$dream.emotions <- gsub("Intrigue", "Curiosity", dream.data$dream.emotions)
dream.data$dream.emotions <- gsub("Interest", "Curiosity", dream.data$dream.emotions)
colnames(dream.data)[13] ="supplements"
colnames(dream.data)[14] ="food.drink"
colnames(dream.data)[15] ="supplements.which"
colnames(dream.data)[16] ="Melatonin"
dream.data$Melatonin <- as.numeric( gsub("[^0-9.-]", "", dream.data$Melatonin) )
colnames(dream.data)[17] ="Entada.Rheedii"
dream.data$Entada.Rheedii <- as.numeric( gsub("[^0-9.-]", "", dream.data$Entada.Rheedii) )
colnames(dream.data)[18] ="Calea.Zacatechichi"
dream.data$Calea.Zacatechichi <- as.numeric( gsub("[^0-9.-]", "", dream.data$Calea.Zacatechichi) )
colnames(dream.data)[19] ="Blue.Lotus"
dream.data$Blue.Lotus <- as.numeric( gsub("[^0-9.-]", "", dream.data$Blue.Lotus) )
colnames(dream.data)[20] ="Wormwood"
dream.data$Wormwood <- as.numeric( gsub("[^0-9.-]", "", dream.data$Wormwood) )
colnames(dream.data)[21] ="Valerian.Root"
dream.data$Valerian.Root <- as.numeric( gsub("[^0-9.-]", "", dream.data$Valerian.Root) )
colnames(dream.data)[22] ="Mugwort"
dream.data$Mugwort <- as.numeric( gsub("[^0-9.-]", "", dream.data$Mugwort) )
colnames(dream.data)[23] ="supplements.other"
colnames(dream.data)[24] ="side.effects"
colnames(dream.data)[25] ="other.dose"
supps <- c( "Melatonin","Entada.Rheedii","Calea.Zacatechichi",
"Blue.Lotus","Wormwood","Valerian.Root","Mugwort" )
long.data <- dream.data
long.data <- pivot_longer( long.data,
cols=16:23,
names_to = "Supplement",
values_to = "Dose" )
long.data$Dose <- as.numeric( gsub("[^0-9.-]", "", long.data$Dose) )
missing_rows <- !complete.cases( long.data$Dose )
long.data$Dose[missing_rows] <- 0
time.quality.model = lm( dream.data$Sleep.Quality ~ dream.data$Sleep.Time )
lm_eqn <- function(df){
m <- lm(Sleep.Quality ~ Sleep.Time, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
quality.time.plot <- ggplot( data=dream.data,
aes( x=Sleep.Time, y=Sleep.Quality ) ) +
geom_smooth( method="lm" ) +
geom_point( ) +
labs( title="Sleep Duration vs. Sleep Quality",
x="Time Slept (Hours)", y="Sleep Quality" ) +
geom_text(x = 4, y = 5, label = lm_eqn(dream.data), parse = TRUE) +
geom_count( aes( size=after_stat( n ), color=after_stat( n ) ) ) +
theme( legend.position = "none" )
quality.time.plot
emote.dream.data <- dream.data %>%
mutate( dream.emotions = strsplit( as.character( dream.emotions ), ",")) %>%
unnest( dream.emotions )
emote.dream.data$dream.emotions <- gsub(" ", "", emote.dream.data$dream.emotions)
emote.dream.data$dream.emotions <- as.factor( emote.dream.data$dream.emotions )
emote.dream.data$dream.emotions <- forcats::fct_infreq( emote.dream.data$dream.emotions )
q20 <- qualitative_hcl(20, "Dark2")
ggplot( data=subset( emote.dream.data, !is.na( dream.emotions ) ),
aes( x=dream.emotions ) ) +
geom_bar( aes( fill=dream.emotions ) ) +
labs( title="Observed Dream Emotion Occurances",
x="Emotion", y="Number of Occurances" ) +
theme(axis.text.x = element_text(angle = 45, hjust=1),
legend.position = "none") +
scale_fill_manual(values = rainbow(nlevels(emote.dream.data$dream.emotions),
start=0.55, end=0.85))
lm_eqn <- function(df){
m <- lm(dream.quality ~ dream.duration, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
dream.quality.time <- ggplot( data=dream.data ) +
geom_smooth( method="lm",
aes( x=dream.duration,
y=dream.quality ) ) +
geom_point( aes( x=dream.duration,
y=dream.quality ) ) +
labs( title="Dream Duration vs. Dream Quality",
x="Dream Duration", y="Dream Quality" ) +
geom_text(x = 3, y = 5.5, label = lm_eqn(dream.data), parse = TRUE) +
geom_count( aes( x=dream.duration, y=dream.quality,
size=after_stat( n ), color=after_stat( n ) ) ) +
theme( legend.position = "none" )
dream.quality.time
lm_eqn <- function(df){
m <- lm(dream.quality ~ dream.recall, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
ggplot( data=dream.data, aes( x=dream.quality, y=dream.recall ) ) +
geom_smooth( method="lm" ) +
geom_point( aes( x=dream.quality,
y=dream.recall ) ) +
labs( title="Dream Quality vs. Dream Recall",
x="Dream Quality", y="Dream Recall" ) +
geom_text(x = 3, y = 5, label = lm_eqn(dream.data), parse = TRUE) +
geom_count( aes( size=after_stat( n ), color=after_stat( n ) ) ) +
theme( legend.position = "none" )
ggplot( data=long.data, aes( x=Dose, y=Sleep.Quality ) ) +
geom_point( aes( color=Supplement ) ) +
geom_smooth( method="lm",
aes( col=Supplement, fill=Supplement ),
se=T ) +
guides( fill = "none" ) +
labs( x="Oneirogen Dose (mg)", y="Sleep Quality",
title="Sleep Quality by Oneirogen Taken" ) +
facet_wrap(~Supplement) +
stat_cor( label.y=0 ) +
ylim(-1, 6) +
theme(legend.position = "none") +
geom_count( aes( size=after_stat( n ), color=Supplement ) )
ggplot( data=long.data, aes( x=Dose, y=dream.quality ) ) +
geom_point( aes( color=Supplement ) ) +
geom_smooth( method="lm",
aes( col=Supplement, fill=Supplement ),
se=T ) +
guides( fill = "none" ) +
labs( x="Oneirogen Dose (mg)", y="Dream Quality",
title="Dream Quality by Oneirogen Taken" ) +
facet_wrap(~Supplement) +
stat_cor( label.y=0 ) +
ylim(-1, 6) +
theme(legend.position = "none") +
geom_count( aes( size=after_stat( n ), color=Supplement ) )
ggplot( data=dream.data, aes( x=dream.quality ) ) +
geom_bar( aes( fill=supplements ), position="dodge" ) +
labs( title="Dream Quality by Oneirogens Taken",
x="Dream Quality", y="Number of Occurances", fill="Oneirogens" )
ggplot( data=dream.data, aes( x=Timestamp ) ) +
geom_histogram( fill="skyblue3", color="black" ) +
labs( title="Survey Responses Over Time", x="Date", y="Responses Recieved" )
nums <- unlist(lapply(dream.data, is.numeric), use.names = FALSE)
test <- dream.data[,nums]
test[is.na(test)] <- 0
mydata.cor = cor( test, method = c("spearman"))
palette = colorRampPalette(c("green", "yellow", "red")) (20)
heatmap(x = mydata.cor, col = palette, symm = TRUE, cexRow=0.5, cexCol=0.5)
ggplot( data=long.data, aes( x=Dose, y=dream.recall ) ) +
geom_point( aes( color=Supplement ) ) +
geom_smooth( method="lm",
aes( col=Supplement, fill=Supplement ),
se=T ) +
guides( fill = "none" ) +
labs( x="Oneirogen Dose (mg)", y="Dream Recall",
title="Dream Recall by Oneirogen Taken" ) +
facet_wrap(~Supplement) +
stat_cor( label.y=0 ) +
ylim(-1, 6) +
theme(legend.position = "none") +
geom_count( aes( size=after_stat( n ), color=Supplement ) )
ggplot( data=dream.data, aes( x=Sleep.Quality, y=dream.quality ) ) +
geom_point()
ggplot(data=dream.data, aes(x=dreamed) ) +
geom_bar( aes( by=supplements, fill=supplements ), position="dodge") +
facet_wrap( dream.quality~Sleep.Quality, labeller="label_both" )
emote.dream.data$Oneirogens <- emote.dream.data$supplements
ggplot(data=emote.dream.data, aes( x=dream.quality, y=..count../sum(..count..) ) ) +
geom_bar( aes( fill=dream.emotions ),
position="dodge") +
labs( title="Emotions by Oneirogens Taken", x="Dream Quality",
y="Proportion of Responses", fill="Emotions" ) +
facet_wrap( ~Oneirogens, labeller = "label_both" )
model.data <- dream.data %>%
mutate( across ( where( is.numeric ), ~replace_na(.x, 0) ) ) %>%
mutate( combined = Sleep.Quality + dream.quality )
dream.model <- lm( data=model.data, combined ~ Blue.Lotus + Wormwood + Valerian.Root )
summary( dream.model )
ggPredict( dream.model )
