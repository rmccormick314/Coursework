knitr::opts_chunk$set(echo = TRUE)
library( ggplot2 )
overall_p <- function(my_model) {
f <- summary(my_model)$fstatistic
p <- pf(f[1],f[2],f[3],lower.tail=F)
attributes(p) <- NULL
return(p)
}
summary( model )
knitr::opts_chunk$set(echo = TRUE)
library( ggplot2 )
exam.data <- readxl::read_excel( "exam2data.xlsx")
model <- lm( data=exam.data, Y ~ X1 + X2 + X3 + X4 + X5 )
summary( model )
prediction <- predict( model,
newdata=data.frame( X1=3.00,
X2=250,
X3=6,
X4=125,
X5=15),
level=0.99 )
print( paste( "Predicted value for Y is: ", prediction ) )
pred_interval = predict( model,
interval="prediction",
level=0.99,
newdata=data.frame( X1=3.00,
X2=250,
X3=6,
X4=125,
X5=15)
)
pred_interval
summary( model )
anova( model )
RegSS <- sum( anova( model )[1:5, 2] )
writeLines( paste( round( ( anova( model )[1,2] / RegSS )*100, 3 ),
"% of the variation in Y is explained by the regression using X1 alone." ) )
RegSS.X3 <- sum( anova( model )[1:2, 2] )
SS.X1 <- RegSS - RegSS.X3
writeLines( paste( round( ( SS.X1/RegSS )*100, 3 ),
"% of the variation in Y is explained by the regression using X3,\n",
"given that X1 and X2 are already in the model." ) )
overall_p <- function(my_model) {
f <- summary(my_model)$fstatistic
p <- pf(f[1],f[2],f[3],lower.tail=F)
attributes(p) <- NULL
return(p)
}
summary( model )
#extract overall p-value of model
print( paste( "Model p-value is:", overall_p( model ) ) )
ggplot( data=exam.data, aes( x=X4, y=Y ) ) +
geom_point() +
geom_smooth( method = lm )
print( paste( "Pearson's Sample Correlation:", cor( exam.data$X4, exam.data$Y ) ) )
# Get the i-1th element
b5.variance <- vcov( model )[6,6]
print( paste( "Variance of b5 =", b5.variance ) )
# 95% confidence interval for b5
confint( model, level=0.95 )[6,]
summary( model )
model.2 <- lm( data=exam.data, Y ~ X1 + X2 + X4 + X5 )
summary( model.2 )
model.3 <- lm( data=exam.data, Y ~ X1 + X2 + X4 )
summary( model.3 )
model.4 <- lm( data=exam.data, Y ~ X1 + X2 )
summary( model.4 )
exam.data$resid <- resid(model)
ggplot( data=exam.data, aes( x=Y, y=resid ) ) +
geom_point() +
geom_line( aes( y=0 ) ) + geom_smooth() +
labs( title="Residual Plot", y="Residuals", x="Y-Values")
anova( model )
anova( model )
13.77 / 5.29
qqplot( exam.data$resid )
qqplot( exam.data$resid, pch = 1 )
qqPlot( exam.data$resid )
qqline( exam.data$resid )
qqline( x = exam.data$resid )
qqplot( x = exam.data$resid )
?qqplot
qqnorm( x = exam.data$resid )
qqnorm( exam.data$resid )
qqnorm( exam.data$resid )
qqline( exam.data$resid, col=2 )
ggplot( data=exam.data, aes( sample=resid ) ) +
stat_qq()
qqnorm(resid(fmodel), main = "The Q-Q plot for Residuals")
qqnorm(resid(model), main = "The Q-Q plot for Residuals")
abline(mean(resid(model)), sd(resid(model)))
shapiro.test(resid(model))
ggplot( data=exam.data, aes( sample=resid ) ) +
stat_qq()
qqnorm(resid(model), main = "The Q-Q plot for Residuals")
abline(mean(resid(model)), sd(resid(model)))
shapiro.test(resid(model))
ggplot( data = exam.data, aes( sample=resid ) ) +
stat_qq() +
geom_smooth( method=lm ) +
labs( title="The Q-Q Plot for Residuals", x="Theoretical Quantiles",
y="Sample Quantiles" )
ggplot( data = exam.data, aes( sample=resid ) ) +
stat_qq() +
geom_smooth( method="lm" ) +
labs( title="The Q-Q Plot for Residuals", x="Theoretical Quantiles",
y="Sample Quantiles" )
ggplot( data = exam.data, aes( sample=resid ) ) +
stat_qq() +
geom_qq_line() +
labs( title="The Q-Q Plot for Residuals", x="Theoretical Quantiles",
y="Sample Quantiles" )
exam.data$resid <- resid(model)
ggplot( data=exam.data, aes( x=Y, y=resid ) ) +
geom_point() +
geom_line( aes( y=0 ) ) + geom_smooth() +
labs( title="Residual Plot", y="Residuals", x="Y-Values")
exam.data$resid <- resid(model)
ggplot( data=exam.data, aes( x=Y, y=resid ) ) +
geom_point() +
geom_line( aes( y=0 ) ) +
stat_smooth(aes(y = resid),method = "lm", formula = y ~ x + I(x^2), size = 1) +
labs( title="Residual Plot", y="Residuals", x="Y-Values")
exam.data$resid <- resid(model)
ggplot( data=exam.data, aes( x=Y, y=resid ) ) +
geom_point() +
geom_line( aes( y=0 ) ) +
stat_smooth(aes(y = resid),method = "lm", formula = y ~ x + I(x^2), size = 1) +
stat_smooth( method="lm" ) +
labs( title="Residual Plot", y="Residuals", x="Y-Values")
exam.data$resid <- resid(model)
ggplot( data=exam.data, aes( x=Y, y=resid ) ) +
geom_point() +
geom_line( aes( y=0 ) ) +
stat_smooth(aes(y = resid),method = "lm", formula = y ~ x + I(x^2), size = 1) +
labs( title="Residual Plot", y="Residuals", x="Y-Values")
shapiro.test(resid(model))
shapiro.test( resid( model ) )
exam.data$resid <- resid(model)
ggplot( data=exam.data, aes( x=Y, y=resid ) ) +
geom_point() +
geom_line( aes( y=0 ) ) +
labs( title="Residual Plot", y="Residuals", x="Y-Values")
# Get the i-1th element
b5.variance <- vcov( model )[6,6]
print( paste( "Variance of b5 =", b5.variance ) )
# 95% confidence interval for b5
confint( model, level=0.95 )[6,]
?confint
# Get the i-1th element
b5.variance <- vcov( model )[6,6]
print( paste( "Variance of b5 =", b5.variance ) )
# 95% confidence interval for b5
confint( model, level=0.95 )
# Get the i-1th element
b5.variance <- vcov( model )[6,6]
print( paste( "Variance of b5 =", b5.variance ) )
# 95% confidence interval for b5
confint( model, level=0.95 )[6,]
red.model <- lm( data=exam.data, Y ~ X2 + X3 + X5 )
summary( red.model )
red.model <- lm( data=exam.data, Y ~ X2 + X3 + X5 )
anova( red.model )
red.model <- lm( data=exam.data, Y ~ X2 + X3 + X5 )
anova( red.model )
anova( model )
red.model <- lm( data=exam.data, Y ~ X2 + X3 + X5 )
anova( red.model )
SSreg.reduced <- sum( anova( model )[1:3, 2] )
anova( model )
red.model <- lm( data=exam.data, Y ~ X2 + X3 + X5 )
anova( red.model )
SSreg.reduced <- sum( anova( model )[1:3, 2] )
SSreg.reduced
anova( model )
red.model <- lm( data=exam.data, Y ~ X2 + X3 + X5 )
anova( red.model )
SSreg.reduced <- sum( anova( red.model )[1:3, 2] )
SSreg.reduced
anova( model )
red.model <- lm( data=exam.data, Y ~ X2 + X3 + X5 )
anova( red.model )
SSreg.reduced <- sum( anova( red.model )[1:3, 2] )
print( paste( "SSreg for reduced model:", SSreg.reduced ) )
anova( model )
red.model <- lm( data=exam.data, Y ~ X2 + X3 + X5 )
anova( red.model )
SSreg.reduced <- sum( anova( red.model )[1:3, 2] )
print( paste( "SSreg for reduced model:", SSreg.reduced ) )
anova( model )
SSreg <- sum( anova( model )[1:5, 2] )
print( paste( "SSreg for full model:", SSreg ) )
((1416.96-1085.15)/2) / (169.12/32)
(((86.94 + 12.59 + 10.15)-(1085.15))/2) / (169.12/32)
(((86.94 + 12.59 + 10.15)-(1085.15))/2) / (169.12/32)
